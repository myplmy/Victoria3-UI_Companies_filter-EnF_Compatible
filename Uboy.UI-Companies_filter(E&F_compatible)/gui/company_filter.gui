################################################################################
# 1. 일반 필터 (Base Company Filter)
################################################################################
types company_building_filter_types
{
    ###########################################
    # 재사용 가능한 버튼 타입
    ###########################################
    type building_filter_option = button {
        size = { 50 50 }
        texture = "[BuildingType.GetIcon]"
        tooltip = "[BuildingType.GetName]"
        onclick = "[GetScriptedGui('com_set_filter').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('building_type', BuildingType.MakeScope).End)]"
        onclick = "[GetVariableSystem.Clear('show_building_type_filter')]"
    }

    ###########################################
    # 카테고리 헤더 타입
    ###########################################
    type category_header = textbox {
        size = { 520 25 }
        align = left|vcenter
        default_format = "#bold"
        fontsize = 16
    }

    ###########################################
    # 필터 메인 버튼
    ###########################################
    type building_filter_button = button {
        size = { 540 120 }
        using = default_button
        onclick = "[GetVariableSystem.Toggle('show_building_type_filter')]"
        
        flowcontainer = {
            direction = vertical
            spacing = 5
            
            flowcontainer = {
                direction = horizontal
                spacing = 10
                parentanchor = vcenter
                
                textbox = {
                    text = "COM_FILTER_BY_BUILDING_TYPE"
                    autoresize = yes
                    margin_top = 10
                    margin_left = 10
                    parentanchor = vcenter
                }
                
                expand = {}
                
                textbox = {
                    visible = "[GetPlayer.MakeScope.Var('com_filter_building').IsSet]"
                    raw_text = "[GetPlayer.MakeScope.Var('com_filter_building').GetBuildingType.GetName]"
                    autoresize = yes
                    margin_top = 10
                    margin_left = 10
                    parentanchor = vcenter
                    default_format = "#bold"
                }
            }

            flowcontainer = {
                direction = horizontal
                spacing = 10
                parentanchor = left
                margin_left = 10
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_base_only')]"
                        onclick = "[GetVariableSystem.Clear('filter_extension_only')]"
                        down = "[GetVariableSystem.Exists('filter_base_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_base_only')]"
                            using = entry_bg
                        }
                        tooltip = "COM_FILTER_BUTTON_BASE_TOOLTIP"
                    }
                    textbox = {
                        text = "COM_FILTER_BUTTON_BASE"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#P"
                        margin = { 10 0 }
                    }
                }
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_extension_only')]"
                        onclick = "[GetVariableSystem.Clear('filter_base_only')]"
                        down = "[GetVariableSystem.Exists('filter_extension_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_extension_only')]"
                            using = entry_bg
                        }
                        tooltip = "COM_FILTER_BUTTON_POTENTIAL_TOOLTIP"
                    }
                    textbox = {
                        text = "COM_FILTER_BUTTON_POTENTIAL"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#high"
                        margin = { 10 0 }
                    }
                }

                button = {
                    visible = "[GetPlayer.MakeScope.Var('com_filter_building').IsSet]"
                    size = { 60 26 }
                    using = default_button
                    raw_text = "X"
                    onclick = "[GetScriptedGui('com_clear_filter').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                    tooltip = "COM_CLEAR_FILTER"
                    parentanchor = vcenter
                }
            }
            
            flowcontainer = {
                direction = horizontal
                spacing = 10
                parentanchor = left
                margin_left = 10
                margin_bottom = 5
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_flavored_only')]"
                        down = "[GetVariableSystem.Exists('filter_flavored_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_flavored_only')]"
                            using = entry_bg
                        }
                    }
                    textbox = {
                        text = "COM_FILTER_FLAVORED"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#variable"
                        margin = { 10 0 }
                    }
                }
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_prestige_only')]"
                        down = "[GetVariableSystem.Exists('filter_prestige_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_prestige_only')]"
                            using = entry_bg
                        }
                    }
                    textbox = {
                        text = "COM_FILTER_PRESTIGE"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#variable"
                        margin = { 10 0 }
                    }
                }
            }
        }
    }

    ###########################################
    # 건물 선택 그리드
    ###########################################
    type building_filter_grid = widget {
        visible = "[GetVariableSystem.Exists('show_building_type_filter')]"
        size = { 540 780 }
        
        scrollarea = {
            size = { 540 780 }
            scrollbarpolicy_horizontal = always_off
            scrollbar_vertical = { using = vertical_scrollbar }
            
            flowcontainer = {
                direction = vertical
                position = { 10 10 }
                spacing = 10
                minimumsize = { 520 -1 }
                
                divider_clean = { size = { 520 2 } }
                
                # 농업
                category_header = { text = "AGRICULTURE" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_option = { datacontext = "[GetBuildingType('building_wheat_farm')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_rye_farm')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_rice_farm')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_maize_farm')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_millet_farm')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_livestock_ranch')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 플랜테이션
                category_header = { text = "PLANTATIONS" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_option = { datacontext = "[GetBuildingType('building_banana_plantation')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_coffee_plantation')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_cotton_plantation')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_dye_plantation')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_sugar_plantation')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_tea_plantation')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_tobacco_plantation')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_opium_plantation')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_silk_plantation')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 광업
                category_header = { text = "MINE_BUILDING" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_option = { datacontext = "[GetBuildingType('building_coal_mine')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_iron_mine')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_lead_mine')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_sulfur_mine')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_gold_mine')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 자원
                category_header = { text = "RESOURCE_BUILDING" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_option = { datacontext = "[GetBuildingType('building_logging_camp')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_rubber_plantation')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_fishing_wharf')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_whaling_station')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_oil_rig')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 경공업
                category_header = { text = "LIGHT_INDUSTRY" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_option = { datacontext = "[GetBuildingType('building_food_industry')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_textile_mills')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_paper_mills')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_furniture_manufacturies')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_tooling_workshops')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_glassworks')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 중공업
                category_header = { text = "HEAVY_INDUSTRY" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_option = { datacontext = "[GetBuildingType('building_automotive_industry')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_chemical_plants')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_electrics_industry')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_explosives_factory')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_motor_industry')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_steel_mills')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_synthetics_plants')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 기반시설 및 기타
                category_header = { text = "INFRA_STRUCTURE_ETC" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_option = { datacontext = "[GetBuildingType('building_port')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_railway')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_power_plant')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_arms_industry')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_artillery_foundries')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_munition_plants')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_shipyards')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_military_shipyards')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_arts_academy')]"}
                }

                # E&F
                category_header = { raw_text = "E&F" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_option = { datacontext = "[GetBuildingType('building_ef_private_construction')]" }
                    building_filter_option = { datacontext = "[GetBuildingType('building_silver_mine')]" }
                }
            }
        }
    }
}

################################################################################
# 2. Attainable 필터
################################################################################
types company_attainable_building_filter_types
{
    ###########################################
    # 재사용 가능한 버튼 타입
    ###########################################
    type building_filter_att_option = button {
        size = { 50 50 }
        texture = "[BuildingType.GetIcon]"
        tooltip = "[BuildingType.GetName]"
        onclick = "[GetScriptedGui('com_att_set_filter').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('building_type', BuildingType.MakeScope).End)]"
        onclick = "[GetVariableSystem.Clear('show_att_building_type_filter')]"
    }

    ###########################################
    # 필터 메인 버튼
    ###########################################
    type building_filter_att_button = button {
        size = { 540 120 }
        using = default_button
        onclick = "[GetVariableSystem.Toggle('show_att_building_type_filter')]"
        
        flowcontainer = {
            direction = vertical
            spacing = 5
            
            flowcontainer = {
                direction = horizontal
                spacing = 10
                parentanchor = vcenter
                
                textbox = {
                    text = "COM_FILTER_BY_BUILDING_TYPE"
                    autoresize = yes
                    margin_top = 10
                    margin_left = 10
                    parentanchor = vcenter
                }
                
                expand = {}
                
                textbox = {
                    visible = "[GetPlayer.MakeScope.Var('com_att_filter_building').IsSet]"
                    raw_text = "[GetPlayer.MakeScope.Var('com_att_filter_building').GetBuildingType.GetName]"
                    autoresize = yes
                    margin_top = 10
                    margin_left = 10
                    parentanchor = vcenter
                    default_format = "#bold"
                }
            }

            flowcontainer = {
                direction = horizontal
                spacing = 10
                parentanchor = left
                margin_left = 10
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_att_base_only')]"
                        onclick = "[GetVariableSystem.Clear('filter_att_extension_only')]"
                        down = "[GetVariableSystem.Exists('filter_att_base_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_att_base_only')]"
                            using = entry_bg
                        }
                        tooltip = "COM_FILTER_BUTTON_BASE_TOOLTIP"
                    }
                    textbox = {
                        text = "COM_FILTER_BUTTON_BASE"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#P"
                        margin = { 10 0 }
                    }
                }
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_att_extension_only')]"
                        onclick = "[GetVariableSystem.Clear('filter_att_base_only')]"
                        down = "[GetVariableSystem.Exists('filter_att_extension_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_att_extension_only')]"
                            using = entry_bg
                        }
                        tooltip = "COM_FILTER_BUTTON_POTENTIAL_TOOLTIP"
                    }
                    textbox = {
                        text = "COM_FILTER_BUTTON_POTENTIAL"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#high"
                        margin = { 10 0 }
                    }
                }

                button = {
                    visible = "[GetPlayer.MakeScope.Var('com_att_filter_building').IsSet]"
                    size = { 60 26 }
                    using = default_button
                    raw_text = "X"
                    onclick = "[GetScriptedGui('com_att_clear_filter').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                    tooltip = "COM_CLEAR_FILTER"
                    parentanchor = vcenter
                }
            }
            
            flowcontainer = {
                direction = horizontal
                spacing = 10
                parentanchor = left
                margin_left = 10
                margin_bottom = 5
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_att_flavored_only')]"
                        down = "[GetVariableSystem.Exists('filter_att_flavored_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_att_flavored_only')]"
                            using = entry_bg
                        }
                    }
                    textbox = {
                        text = "COM_FILTER_FLAVORED"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#variable"
                        margin = { 10 0 }
                    }
                }
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_att_prestige_only')]"
                        down = "[GetVariableSystem.Exists('filter_att_prestige_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_att_prestige_only')]"
                            using = entry_bg
                        }
                    }
                    textbox = {
                        text = "COM_FILTER_PRESTIGE"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#variable"
                        margin = { 10 0 }
                    }
                }
            }
        }
    }

    # BASE 건물 필터용 아이템 
    type com_att_base_filter_item = flowcontainer {
        visible = "[And3(
            ObjectsEqual(BuildingType.MakeScope, GetPlayer.MakeScope.Var('com_att_filter_building').GetBuildingType.MakeScope),
            Or(Not(GetVariableSystem.Exists('filter_att_flavored_only')), CompanyType.IsFlavoredCompany),
            Or(Not(GetVariableSystem.Exists('filter_att_prestige_only')), CompanyType.CanProducePrestigeGoods)
        )]"
        direction = horizontal
        spacing = 8
        minimumsize = { 520 -1 }
        maximumsize = { 520 -1 }
        margin = { 5 3 }
        background = { using = dark_area alpha = 0.3 }
        
        # 내용은 원본과 동일하게 유지
        block "content" {}
    }

    # EXTENSION 건물 필터용 아이템 
    type com_att_extension_filter_item = flowcontainer {
        visible = "[And3(
            ObjectsEqual(BuildingType.MakeScope, GetPlayer.MakeScope.Var('com_att_filter_building').GetBuildingType.MakeScope),
            Or(Not(GetVariableSystem.Exists('filter_att_flavored_only')), CompanyType.IsFlavoredCompany),
            Or(Not(GetVariableSystem.Exists('filter_att_prestige_only')), CompanyType.CanProducePrestigeGoods)
        )]"
        direction = horizontal
        spacing = 8
        minimumsize = { 520 -1 }
        maximumsize = { 520 -1 }
        margin = { 5 3 }
        background = { using = dark_area alpha = 0.3 }
        
        block "content" {}
    }

    # Flavored/Prestige 필터용 아이템 
    type com_att_flavored_prestige_filter_item = flowcontainer {
        visible = "[And(
            Or(Not(GetVariableSystem.Exists('filter_att_flavored_only')), CompanyType.IsFlavoredCompany),
            Or(Not(GetVariableSystem.Exists('filter_att_prestige_only')), CompanyType.CanProducePrestigeGoods)
        )]"
        direction = horizontal
        spacing = 8
        minimumsize = { 520 -1 }
        maximumsize = { 520 -1 }
        margin = { 5 3 }
        background = { using = dark_area alpha = 0.3 }
        
        block "content" {}
    }

    ###########################################
    # 건물 선택 그리드
    ###########################################
    type building_filter_att_grid = widget {
        visible = "[GetVariableSystem.Exists('show_att_building_type_filter')]"
        size = { 540 780 }
        
        scrollarea = {
            size = { 540 780 }
            scrollbarpolicy_horizontal = always_off
            scrollbar_vertical = { using = vertical_scrollbar }
            
            flowcontainer = {
                direction = vertical
                position = { 10 10 }
                spacing = 10
                minimumsize = { 520 -1 }
                
                divider_clean = { size = { 520 2 } }
                
                # 농업
                category_header = { text = "AGRICULTURE" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_wheat_farm')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_rye_farm')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_rice_farm')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_maize_farm')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_millet_farm')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_livestock_ranch')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 플랜테이션
                category_header = { text = "PLANTATIONS" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_banana_plantation')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_coffee_plantation')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_cotton_plantation')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_dye_plantation')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_sugar_plantation')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_tea_plantation')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_tobacco_plantation')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_opium_plantation')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_silk_plantation')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 광업
                category_header = { text = "MINE_BUILDING" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_coal_mine')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_iron_mine')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_lead_mine')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_sulfur_mine')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_gold_mine')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 자원
                category_header = { text = "RESOURCE_BUILDING" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_logging_camp')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_rubber_plantation')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_fishing_wharf')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_whaling_station')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_oil_rig')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 경공업
                category_header = { text = "LIGHT_INDUSTRY" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_food_industry')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_textile_mills')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_paper_mills')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_furniture_manufacturies')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_tooling_workshops')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_glassworks')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 중공업
                category_header = { text = "HEAVY_INDUSTRY" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_automotive_industry')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_chemical_plants')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_electrics_industry')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_explosives_factory')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_motor_industry')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_steel_mills')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_synthetics_plants')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 기반시설 및 기타
                category_header = { text = "INFRA_STRUCTURE_ETC" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_port')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_railway')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_power_plant')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_arms_industry')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_artillery_foundries')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_munition_plants')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_shipyards')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_military_shipyards')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_arts_academy')]"}
                }

                # E&F
                category_header = { raw_text = "E&F" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_ef_private_construction')]" }
                    building_filter_att_option = { datacontext = "[GetBuildingType('building_silver_mine')]" }
                }

            }
        }
    }
}

################################################################################
# 3. Potential 필터
################################################################################
types company_potential_building_filter_types
{
    ###########################################
    # 재사용 가능한 버튼 타입
    ###########################################
    type building_filter_pot_option = button {
        size = { 50 50 }
        texture = "[BuildingType.GetIcon]"
        tooltip = "[BuildingType.GetName]"
        onclick = "[GetScriptedGui('com_pot_set_filter').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('building_type', BuildingType.MakeScope).End)]"
        onclick = "[GetVariableSystem.Clear('show_pot_building_type_filter')]"
    }

    ###########################################
    # 필터 메인 버튼
    ###########################################
    type building_filter_pot_button = button {
        size = { 540 120 }
        using = default_button
        onclick = "[GetVariableSystem.Toggle('show_pot_building_type_filter')]"
        
        flowcontainer = {
            direction = vertical
            spacing = 5
            
            flowcontainer = {
                direction = horizontal
                spacing = 10
                parentanchor = vcenter
                
                textbox = {
                    text = "COM_FILTER_BY_BUILDING_TYPE"
                    autoresize = yes
                    margin_top = 10
                    margin_left = 10
                    parentanchor = vcenter
                }
                
                expand = {}
                
                textbox = {
                    visible = "[GetPlayer.MakeScope.Var('com_pot_filter_building').IsSet]"
                    raw_text = "[GetPlayer.MakeScope.Var('com_pot_filter_building').GetBuildingType.GetName]"
                    autoresize = yes
                    margin_top = 10
                    margin_left = 10
                    parentanchor = vcenter
                    default_format = "#bold"
                }
            }

            flowcontainer = {
                direction = horizontal
                spacing = 10
                parentanchor = left
                margin_left = 10
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_pot_base_only')]"
                        onclick = "[GetVariableSystem.Clear('filter_pot_extension_only')]"
                        down = "[GetVariableSystem.Exists('filter_pot_base_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_pot_base_only')]"
                            using = entry_bg
                        }
                        tooltip = "COM_FILTER_BUTTON_BASE_TOOLTIP"
                    }
                    textbox = {
                        text = "COM_FILTER_BUTTON_BASE"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#P"
                        margin = { 10 0 }
                    }
                }
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_pot_extension_only')]"
                        onclick = "[GetVariableSystem.Clear('filter_pot_base_only')]"
                        down = "[GetVariableSystem.Exists('filter_pot_extension_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_pot_extension_only')]"
                            using = entry_bg
                        }
                        tooltip = "COM_FILTER_BUTTON_POTENTIAL_TOOLTIP"
                    }
                    textbox = {
                        text = "COM_FILTER_BUTTON_POTENTIAL"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#high"
                        margin = { 10 0 }
                    }
                }

                button = {
                    visible = "[GetPlayer.MakeScope.Var('com_pot_filter_building').IsSet]"
                    size = { 60 26 }
                    using = default_button
                    raw_text = "X"
                    onclick = "[GetScriptedGui('com_pot_clear_filter').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                    tooltip = "COM_CLEAR_FILTER"
                    parentanchor = vcenter
                }
            }
            
            flowcontainer = {
                direction = horizontal
                spacing = 10
                parentanchor = left
                margin_left = 10
                margin_bottom = 5
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_pot_flavored_only')]"
                        down = "[GetVariableSystem.Exists('filter_pot_flavored_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_pot_flavored_only')]"
                            using = entry_bg
                        }
                    }
                    textbox = {
                        text = "COM_FILTER_FLAVORED"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#variable"
                        margin = { 10 0 }
                    }
                }
                
                container = {
                    button = {
                        size = { 100% 26 }
                        using = default_button
                        using = back_button_sound
                        onclick = "[GetVariableSystem.Toggle('filter_pot_prestige_only')]"
                        down = "[GetVariableSystem.Exists('filter_pot_prestige_only')]"
                        background = {
                            visible = "[GetVariableSystem.Exists('filter_pot_prestige_only')]"
                            using = entry_bg
                        }
                    }
                    textbox = {
                        text = "COM_FILTER_PRESTIGE"
                        autoresize = yes
                        align = center|vcenter
                        parentanchor = center
                        default_format = "#variable"
                        margin = { 10 0 }
                    }
                }
            }
        }
    }

    ###########################################
    # 건물 선택 그리드
    ###########################################
    type building_filter_pot_grid = widget {
        visible = "[GetVariableSystem.Exists('show_pot_building_type_filter')]"
        size = { 540 780 }
        
        scrollarea = {
            size = { 540 780 }
            scrollbarpolicy_horizontal = always_off
            scrollbar_vertical = { using = vertical_scrollbar }
            
            flowcontainer = {
                direction = vertical
                position = { 10 10 }
                spacing = 10
                minimumsize = { 520 -1 }
                
                divider_clean = { size = { 520 2 } }
                
                # 농업
                category_header = { text = "AGRICULTURE" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_wheat_farm')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_rye_farm')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_rice_farm')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_maize_farm')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_millet_farm')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_livestock_ranch')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 플랜테이션
                category_header = { text = "PLANTATIONS" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_banana_plantation')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_coffee_plantation')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_cotton_plantation')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_dye_plantation')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_sugar_plantation')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_tea_plantation')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_tobacco_plantation')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_opium_plantation')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_silk_plantation')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 광업
                category_header = { text = "MINE_BUILDING" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_coal_mine')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_iron_mine')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_lead_mine')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_sulfur_mine')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_gold_mine')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 자원
                category_header = { text = "RESOURCE_BUILDING" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_logging_camp')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_rubber_plantation')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_fishing_wharf')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_whaling_station')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_oil_rig')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 경공업
                category_header = { text = "LIGHT_INDUSTRY" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_food_industry')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_textile_mills')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_paper_mills')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_furniture_manufacturies')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_tooling_workshops')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_glassworks')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 중공업
                category_header = { text = "HEAVY_INDUSTRY" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_automotive_industry')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_chemical_plants')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_electrics_industry')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_explosives_factory')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_motor_industry')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_steel_mills')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_synthetics_plants')]" }
                }
                
                divider_clean = { size = { 520 2 } }
                
                # 기반시설 및 기타
                category_header = { text = "INFRA_STRUCTURE_ETC" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_port')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_railway')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_power_plant')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_arms_industry')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_artillery_foundries')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_munition_plants')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_shipyards')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_military_shipyards')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_arts_academy')]"}
                }

                # E&F
                category_header = { raw_text = "E&F" }
                flowcontainer = {
                    direction = horizontal
                    spacing = 5
                    parentanchor = left
                    
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_ef_private_construction')]" }
                    building_filter_pot_option = { datacontext = "[GetBuildingType('building_silver_mine')]" }
                }

            }
        }
    }
}
